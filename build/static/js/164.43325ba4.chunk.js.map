{"version":3,"file":"static/js/164.43325ba4.chunk.js","mappings":"yHAUA,IARA,SAAmB,GAAY,IAAVA,EAAK,EAALA,MACnB,OACE,0BACE,eAAIC,UAAU,UAAS,SAAED,KAG/B,C,uMC8RA,MAhSA,SAAiB,GAOb,IANFE,EAAW,EAAXA,YACAC,EAAc,EAAdA,eAAe,EAAD,EACdC,KAAAA,OAAI,MAAG,MAAK,EACZC,EAAO,EAAPA,QACAC,EAAW,EAAXA,YACAC,EAAc,EAAdA,eAEMC,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAAG,eAAjCC,EAAM,KAAEC,EAAS,KAElBC,EAAQ,yCAAG,WAAOC,GAAM,4EAGN,GAHM,SAE1BN,GAASO,EAAAA,EAAAA,OACLC,EAAW,KACF,QAATZ,EAAc,gCACCa,EAAAA,EAAAA,KAAW,qBAAsBH,EAAQ,CACxDI,QAAS,CACPC,cAAc,UAAD,OAAYC,aAAaC,QAAQ,aAE/C,KAAD,EAJFL,EAAQ,+CAMSC,EAAAA,EAAAA,IAAU,cAAD,OACVX,EAAYgB,KAC1BR,EAAQ,CACNI,QAAS,CACPC,cAAc,UAAD,OAAYC,aAAaC,QAAQ,aAE/C,KAAD,GANJL,EAAQ,eAQNA,EAASO,KAAKC,QAChBC,EAAAA,GAAAA,QAAgBT,EAASO,KAAKE,SAE9BA,EAAAA,GAAAA,MAAcT,EAASO,KAAKE,SAE9BpB,IACAF,GAAe,GACfI,EAAe,MACfC,GAASkB,EAAAA,EAAAA,OAAe,kDAExBD,EAAAA,GAAAA,MAAc,KAAMA,SACpBjB,GAASkB,EAAAA,EAAAA,OAAe,0DAE3B,gBAhCa,sCA4Cd,OAVAC,EAAAA,EAAAA,YAAU,WACRV,EAAAA,EAAAA,IAAU,6BAA8B,CACtCC,QAAS,CACPC,cAAc,UAAD,OAAYC,aAAaC,QAAQ,aAE/CO,MAAK,SAACZ,GACPJ,EAAUI,EAASO,KAAKA,KAC1B,GACF,GAAG,KAGD,SAAC,IAAK,CACJM,MAAO,IACP7B,MAAgB,QAATI,EAAiB,UAAY,aACpC0B,QAAS5B,EACT6B,SAAU,WACRxB,EAAe,MACfJ,GAAe,EACjB,EACA6B,QAAQ,EAAM,UAEd,UAAC,IAAI,CAACC,OAAO,WAAWpB,SAAUA,EAAUqB,cAAe5B,EAAY,WACrE,UAAC,IAAG,CAAC6B,OAAQ,CAAC,GAAI,IAAI,WACpB,SAAC,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAG,UAClB,SAAC,SAAS,CACRC,MAAM,WACNC,KAAK,OACLC,MAAO,CACL,CACEC,UAA2B,EAC3BhB,QAEM,0BAGR,UAEF,kBACErB,KAAK,OACLH,UAAU,iEAIhB,SAAC,IAAG,CAACmC,GAAI,GAAIC,GAAI,GAAG,UAClB,SAAC,SAAS,CACRC,MAAM,aACNC,KAAK,YACLC,MAAO,CACL,CACEC,UAA2B,EAC3BhB,QAAS,6BAEX,UAEF,kBACErB,KAAK,OACLH,UAAU,iEAIhB,SAAC,IAAG,CAACmC,GAAI,GAAIC,GAAI,GAAG,UAClB,SAAC,SAAS,CACRC,MAAM,WACNC,KAAK,WACLC,MAAO,CACL,CACEC,UAA2B,EAC3BhB,QAAS,+BAEX,UAEF,kBACErB,KAAK,SACLH,UAAU,iEAIhB,SAAC,IAAG,CAACmC,GAAI,GAAIC,GAAI,GAAG,UAClB,SAAC,SAAS,CACRC,MAAM,OACNC,KAAK,OACLC,MAAO,CACL,CACEC,UAA2B,EAC3BhB,QAAS,0BACTiB,gBAAiB,aAEnB,UAEF,oBAAQzC,UAAU,0DAAyD,WACzE,mBAAQ0C,MAAM,GAAE,kBACfhC,EAAOiC,KAAI,SAACrB,EAAMsB,GACjB,OACE,mBAAoBF,MAAOpB,EAAKuB,MAAM,SACnCvB,EAAKuB,OADKD,EAIjB,YAIN,SAAC,IAAG,CAACT,GAAI,GAAIC,GAAI,GAAG,UAClB,SAAC,SAAS,CACRC,MAAM,KACNC,KAAK,KACLC,MAAO,CACL,CACEC,UAA2B,EAC3BhB,QAAS,0BACTiB,gBAAiB,aAEnB,UAEF,oBAAQzC,UAAU,0DAAyD,WACzE,mBAAQ0C,MAAM,GAAE,gBACfhC,EAAOiC,KAAI,SAACrB,EAAMsB,GACjB,OACE,mBAAoBF,MAAOpB,EAAKuB,MAAM,SACnCvB,EAAKuB,OADKD,EAIjB,YAIN,SAAC,IAAG,CAACT,GAAI,EAAGC,GAAI,GAAG,UACjB,SAAC,SAAS,CACRC,MAAM,eACNC,KAAK,cACLC,MAAO,CACL,CACEC,UAA2B,EAC3BhB,QAAS,6BACTiB,gBAAiB,aAEnB,UAEF,kBACEK,KAAK,IAAIC,MAAOC,cAAcC,MAAM,KAAK,GACzC9C,KAAK,OACLH,UAAU,iEAIhB,SAAC,IAAG,CAACmC,GAAI,EAAGC,GAAI,GAAG,UACjB,SAAC,SAAS,CACRC,MAAM,YACNC,KAAK,YACLC,MAAO,CACL,CACEC,UAA2B,EAC3BhB,QAAS,+BACTiB,gBAAiB,aAEnB,UAEF,kBACEtC,KAAK,OACLH,UAAU,iEAIhB,SAAC,IAAG,CAACmC,GAAI,EAAGC,GAAI,GAAG,UACjB,SAAC,SAAS,CACRC,MAAM,UACNC,KAAK,UACLC,MAAO,CACL,CACEC,UAA2B,EAC3BhB,QAAS,6BACTiB,gBAAiB,aAEnB,UAEF,kBACEtC,KAAK,OACLH,UAAU,iEAIhB,SAAC,IAAG,CAACmC,GAAI,GAAIC,GAAI,GAAG,UAClB,SAAC,SAAS,CACRC,MAAM,QACNC,KAAK,QACLC,MAAO,CACL,CACEC,UAA2B,EAC3BhB,QAAS,wBAEX,UAEF,kBACErB,KAAK,SACLH,UAAU,iEAIhB,SAAC,IAAG,CAACmC,GAAI,GAAIC,GAAI,GAAG,UAClB,SAAC,SAAS,CACRC,MAAM,SACNC,KAAK,SACLC,MAAO,CACL,CACEC,UAA2B,EAC3BC,gBAAiB,aAEnB,UAEF,oBACEzC,UAAU,0DACVsC,KAAK,SACLY,GAAG,SACHC,SAAS,eAAc,WAEvB,mBAAQT,MAAM,eAAeS,UAAQ,6BACrC,mBAAQT,MAAM,UAAS,sBACvB,mBAAQA,MAAM,YAAW,kCAOjC,gBAAK1C,UAAU,mBAAkB,UAC/B,oBACEG,KAAK,SACLH,UAAU,0GAEA,WAEV,iBAAMA,UAAU,mGAChB,iBAAMA,UAAU,gLAChB,iBAAMA,UAAU,yGAAwG,mBAGxH,iBAAMA,UAAU,oEAM5B,E,6BCjIA,MA1JA,WACE,IAAMO,GAAWC,EAAAA,EAAAA,MACjB,GAAsCC,EAAAA,EAAAA,WAAS,GAAM,eAA9CR,EAAW,KAAEC,EAAc,KAClC,GAA0BO,EAAAA,EAAAA,UAAS,IAAG,eAA/B2C,EAAK,KAAEC,EAAQ,KACtB,GAAsC5C,EAAAA,EAAAA,UAAS,MAAK,eAA7CJ,EAAW,KAAEC,EAAc,KAE5BgD,GAAWC,EAAAA,EAAAA,cAAW,uBAAC,yFAED,OAFC,SAEzBhD,GAASO,EAAAA,EAAAA,OAAe,SACDE,EAAAA,EAAAA,KAAW,2BAA4B,CAAC,EAAG,CAChEC,QAAS,CACPC,cAAc,UAAD,OAAYC,aAAaC,QAAQ,aAE/C,KAAD,EAJIL,EAAQ,OAKdR,GAASkB,EAAAA,EAAAA,OACLV,EAASO,KAAKC,QAChB8B,EAAStC,EAASO,KAAKA,MAEvBE,EAAAA,GAAAA,MAAcT,EAASO,KAAKE,SAC7B,gDAEDjB,GAASkB,EAAAA,EAAAA,OACTD,EAAAA,GAAAA,MAAc,KAAMA,SAAS,yDAE9B,CAACjB,IAEEiD,EAAS,yCAAG,WAAOnC,GAAG,4EAEA,OAFA,SAExBd,GAASO,EAAAA,EAAAA,OAAe,SACDE,EAAAA,EAAAA,OAAa,cAAD,OAAeK,GAAO,CAAC,EAAG,CAC3DJ,QAAS,CACPC,cAAc,UAAD,OAAYC,aAAaC,QAAQ,aAE/C,KAAD,EAJIL,EAAQ,OAMdR,GAASkB,EAAAA,EAAAA,OACLV,EAASO,KAAKC,SAChBC,EAAAA,GAAAA,QAAgBT,EAASO,KAAKE,SAC9B8B,KAEA9B,EAAAA,GAAAA,MAAcT,EAASO,KAAKE,SAC7B,gDAEDjB,GAASkB,EAAAA,EAAAA,OACTD,EAAAA,GAAAA,MAAc,KAAMA,SAAS,yDAEhC,gBApBc,sCAsBTiC,EAAU,CACd,CACE1D,MAAO,OACP2D,UAAW,QAEb,CACE3D,MAAO,aACP2D,UAAW,aAEb,CACE3D,MAAO,OACP2D,UAAW,QAEb,CACE3D,MAAO,KACP2D,UAAW,MAEb,CACE3D,MAAO,eACP2D,UAAW,eAGb,CACE3D,MAAO,SACP2D,UAAW,SACXC,OAAQ,SAACC,GACP,MAAe,cAAXA,GACK,iBAAM5D,UAAU,eAAc,SAAE4D,IACnB,YAAXA,GACF,iBAAM5D,UAAU,kBAAiB,SAAE4D,KAEnC,iBAAM5D,UAAU,iBAAgB,SAAE4D,GAE7C,GAEF,CACE7D,MAAO,SACP2D,UAAW,SACXC,OAAQ,SAACE,EAASC,GAAM,OACtB,iBAAK9D,UAAU,aAAY,WACzB,cACEA,UAAU,yDACV+D,QAAS,kBAAMP,EAAUM,EAAOzC,IAAI,KAGtC,cACErB,UAAU,wCACV+D,QAAS,WACPzD,EAAewD,GACf5D,GAAe,EACjB,MAEE,IASZ,OAJAwB,EAAAA,EAAAA,YAAU,WACR4B,GACF,GAAG,CAACA,KAGF,iCACE,SAACU,EAAA,EAAM,WACL,wCAEF,4BACE,iBAAKhE,UAAU,2BAA0B,WACvC,SAACiE,EAAA,EAAS,CAAClE,MAAM,WACjB,oBACEI,KAAK,SACLH,UAAU,0GAGV+D,QAAS,kBAAM7D,GAAe,EAAK,EAAC,WAEpC,iBAAMF,UAAU,mGAChB,iBAAMA,UAAU,gLAChB,iBAAMA,UAAU,yGAAwG,sBAGxH,iBAAMA,UAAU,kEAGpB,iBAAKA,UAAU,MAAK,WAClB,SAAC,IAAK,CACJyD,QAASA,EACTS,WAAYd,EACZe,WAAY,CAAEC,SAAU,KAEzBnE,IACC,SAAC,EAAO,CACNA,YAAaA,EACbC,eAAgBA,EAChBC,KAAME,EAAc,OAAS,MAC7BA,YAAaA,EACbC,eAAgBA,EAChBF,QAASkD,YAOvB,C","sources":["components/PageTitle.js","components/BusForm.js","pages/Admin/AdminBuses.jsx"],"sourcesContent":["import React from \"react\";\n\nfunction PageTitle({ title }) {\n  return (\n    <div>\n      <h1 className=\"text-xl\">{title}</h1>\n    </div>\n  );\n}\n\nexport default PageTitle;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Modal, Row, Form, Col, message } from \"antd\";\nimport axios from \"axios\";\nimport { HideLoading, ShowLoading } from \"../redux/alertsSlice\";\n\nfunction BusForm({\n  showBusForm,\n  setShowBusForm,\n  type = \"add\",\n  getData,\n  selectedBus,\n  setSelectedBus,\n}) {\n  const dispatch = useDispatch();\n  const [cities, setCities] = useState([]);\n\n  const onFinish = async (values) => {\n    try {\n      dispatch(ShowLoading());\n      let response = null;\n      if (type === \"add\") {\n        response = await axios.post(\"/api/buses/add-bus\", values, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          }\n        });\n      } else {\n        response = await axios.put(\n          `/api/buses/${selectedBus._id}`,\n          values, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n            }\n          });\n      }\n      if (response.data.success) {\n        message.success(response.data.message);\n      } else {\n        message.error(response.data.message);\n      }\n      getData();\n      setShowBusForm(false);\n      setSelectedBus(null);\n      dispatch(HideLoading());\n    } catch (error) {\n      message.error(error.message);\n      dispatch(HideLoading());\n    }\n  };\n\n  useEffect(() => {\n    axios.get(\"/api/cities/get-all-cities\", {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      }\n    }).then((response) => {\n      setCities(response.data.data);\n    });\n  }, []);\n\n  return (\n    <Modal\n      width={800}\n      title={type === \"add\" ? \"Add Bus\" : \"Update Bus\"}\n      visible={showBusForm}\n      onCancel={() => {\n        setSelectedBus(null);\n        setShowBusForm(false);\n      }}\n      footer={false}\n    >\n      <Form layout=\"vertical\" onFinish={onFinish} initialValues={selectedBus}>\n        <Row gutter={[10, 10]}>\n          <Col lg={24} xs={24}>\n            <Form.Item\n              label=\"Bus Name\"\n              name=\"name\"\n              rules={[\n                {\n                  required: type === \"add\" ? true : true,\n                  message:\n                    type === \"add\"\n                      ? \"Please enter bus name\"\n                      : \"Please enter bus name\",\n                },\n              ]}\n            >\n              <input\n                type=\"text\"\n                className=\"block border border-blue-500 w-full p-3 rounded-lg mb-4\"\n              />\n            </Form.Item>\n          </Col>\n          <Col lg={12} xs={24}>\n            <Form.Item\n              label=\"Bus Number\"\n              name=\"busNumber\"\n              rules={[\n                {\n                  required: type === \"add\" ? true : true,\n                  message: \"Please input bus number!\",\n                },\n              ]}\n            >\n              <input\n                type=\"text\"\n                className=\"block border border-blue-500 w-full p-3 rounded-lg mb-4\"\n              />\n            </Form.Item>\n          </Col>\n          <Col lg={12} xs={24}>\n            <Form.Item\n              label=\"Capacity\"\n              name=\"capacity\"\n              rules={[\n                {\n                  required: type === \"add\" ? true : true,\n                  message: \"Please input bus capacity!\",\n                },\n              ]}\n            >\n              <input\n                type=\"number\"\n                className=\"block border border-blue-500 w-full p-3 rounded-lg mb-4\"\n              />\n            </Form.Item>\n          </Col>\n          <Col lg={12} xs={24}>\n            <Form.Item\n              label=\"From\"\n              name=\"from\"\n              rules={[\n                {\n                  required: type === \"add\" ? true : true,\n                  message: \"Please Choose an option\",\n                  validateTrigger: \"onSubmit\",\n                },\n              ]}\n            >\n              <select className=\"block border border-blue-500 w-full p-3 rounded-lg mb-4\">\n                <option value=\"\">From</option>\n                {cities.map((data, index) => {\n                  return (\n                    <option key={index} value={data.ville}>\n                      {data.ville}\n                    </option>\n                  );\n                })}\n              </select>\n            </Form.Item>\n          </Col>\n          <Col lg={12} xs={24}>\n            <Form.Item\n              label=\"To\"\n              name=\"to\"\n              rules={[\n                {\n                  required: type === \"add\" ? true : true,\n                  message: \"Please Choose an option\",\n                  validateTrigger: \"onSubmit\",\n                },\n              ]}\n            >\n              <select className=\"block border border-blue-500 w-full p-3 rounded-lg mb-4\">\n                <option value=\"\">To</option>\n                {cities.map((data, index) => {\n                  return (\n                    <option key={index} value={data.ville}>\n                      {data.ville}\n                    </option>\n                  );\n                })}\n              </select>\n            </Form.Item>\n          </Col>\n          <Col lg={8} xs={24}>\n            <Form.Item\n              label=\"Journey Date\"\n              name=\"journeyDate\"\n              rules={[\n                {\n                  required: type === \"add\" ? true : true,\n                  message: \"Please input journey date!\",\n                  validateTrigger: \"onSubmit\",\n                },\n              ]}\n            >\n              <input\n                min={new Date().toISOString().split(\"T\")[0]}\n                type=\"date\"\n                className=\"block border border-blue-500 w-full p-3 rounded-lg mb-4\"\n              />\n            </Form.Item>\n          </Col>\n          <Col lg={8} xs={24}>\n            <Form.Item\n              label=\"Departure\"\n              name=\"departure\"\n              rules={[\n                {\n                  required: type === \"add\" ? true : true,\n                  message: \"Please input departure time!\",\n                  validateTrigger: \"onSubmit\",\n                },\n              ]}\n            >\n              <input\n                type=\"time\"\n                className=\"block border border-blue-500 w-full p-3 rounded-lg mb-4\"\n              />\n            </Form.Item>\n          </Col>\n          <Col lg={8} xs={24}>\n            <Form.Item\n              label=\"Arrival\"\n              name=\"arrival\"\n              rules={[\n                {\n                  required: type === \"add\" ? true : true,\n                  message: \"Please input arrival time!\",\n                  validateTrigger: \"onSubmit\",\n                },\n              ]}\n            >\n              <input\n                type=\"time\"\n                className=\"block border border-blue-500 w-full p-3 rounded-lg mb-4\"\n              />\n            </Form.Item>\n          </Col>\n          <Col lg={12} xs={24}>\n            <Form.Item\n              label=\"Price\"\n              name=\"price\"\n              rules={[\n                {\n                  required: type === \"add\" ? true : true,\n                  message: \"Please input price!\",\n                },\n              ]}\n            >\n              <input\n                type=\"number\"\n                className=\"block border border-blue-500 w-full p-3 rounded-lg mb-4\"\n              />\n            </Form.Item>\n          </Col>\n          <Col lg={12} xs={24}>\n            <Form.Item\n              label=\"Status\"\n              name=\"status\"\n              rules={[\n                {\n                  required: type === \"add\" ? true : true,\n                  validateTrigger: \"onSubmit\",\n                },\n              ]}\n            >\n              <select\n                className=\"block border border-blue-500 w-full p-3 rounded-lg mb-4\"\n                name=\"status\"\n                id=\"status\"\n                selected=\"Yet to start\"\n              >\n                <option value=\"Yet to start\" selected>Yet To Start</option>\n                <option value=\"Running\">Running</option>\n                <option value=\"Completed\">\n                  Completed\n                </option>\n              </select>\n            </Form.Item>\n          </Col>\n        </Row>\n        <div className=\"flex justify-end\">\n          <button\n            type=\"submit\"\n            className=\"relative inline-flex items-center justify-start\n                px-10 py-3 overflow-hidden font-bold rounded-full\n                group\"\n          >\n            <span className=\"w-32 h-32 rotate-45 translate-x-12 -translate-y-2 absolute left-0 top-0 bg-white opacity-[3%]\"></span>\n            <span className=\"absolute top-0 left-0 w-48 h-48 -mt-1 transition-all duration-500 ease-in-out rotate-45 -translate-x-56 -translate-y-24 bg-blue-600 opacity-100 group-hover:-translate-x-8\"></span>\n            <span className=\"relative w-full text-left text-black transition-colors duration-200 ease-in-out group-hover:text-white\">\n              Save\n            </span>\n            <span className=\"absolute inset-0 border-2 border-blue-600 rounded-full\"></span>\n          </button>\n        </div>\n      </Form>\n    </Modal>\n  );\n}\n\nexport default BusForm;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport BusForm from \"../../components/BusForm\";\nimport PageTitle from \"../../components/PageTitle\";\nimport { HideLoading, ShowLoading } from \"../../redux/alertsSlice\";\nimport { useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { message, Table } from \"antd\";\nimport { Helmet } from \"react-helmet\";\n\nfunction AdminBuses() {\n  const dispatch = useDispatch();\n  const [showBusForm, setShowBusForm] = useState(false);\n  const [buses, setBuses] = useState([]);\n  const [selectedBus, setSelectedBus] = useState(null);\n\n  const getBuses = useCallback(async () => {\n    try {\n      dispatch(ShowLoading());\n      const response = await axios.post(\"/api/buses/get-all-buses\", {}, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        }\n      });\n      dispatch(HideLoading());\n      if (response.data.success) {\n        setBuses(response.data.data);\n      } else {\n        message.error(response.data.message);\n      }\n    } catch (error) {\n      dispatch(HideLoading());\n      message.error(error.message);\n    }\n  }, [dispatch]);\n\n  const deleteBus = async (_id) => {\n    try {\n      dispatch(ShowLoading());\n      const response = await axios.delete(`/api/buses/${_id}`, {}, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        }\n      });\n\n      dispatch(HideLoading());\n      if (response.data.success) {\n        message.success(response.data.message);\n        getBuses();\n      } else {\n        message.error(response.data.message);\n      }\n    } catch (error) {\n      dispatch(HideLoading());\n      message.error(error.message);\n    }\n  };\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n    },\n    {\n      title: \"Bus Number\",\n      dataIndex: \"busNumber\",\n    },\n    {\n      title: \"From\",\n      dataIndex: \"from\",\n    },\n    {\n      title: \"To\",\n      dataIndex: \"to\",\n    },\n    {\n      title: \"Journey Date\",\n      dataIndex: \"journeyDate\",\n    },\n\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      render: (status) => {\n        if (status === \"Completed\") {\n          return <span className=\"text-red-500\">{status}</span>;\n        } else if (status === \"running\") {\n          return <span className=\"text-yellow-500\">{status}</span>;\n        } else {\n          return <span className=\"text-green-500\">{status}</span>;\n        }\n      },\n    },\n    {\n      title: \"Action\",\n      dataIndex: \"action\",\n      render: (actions, record) => (\n        <div className=\"flex gap-3\">\n          <i\n            className=\"ri-delete-bin-line cursor-pointer text-red-500 text-xl\"\n            onClick={() => deleteBus(record._id)}\n          ></i>\n\n          <i\n            className=\"ri-pencil-line cursor-pointer text-xl\"\n            onClick={() => {\n              setSelectedBus(record);\n              setShowBusForm(true);\n            }}\n          ></i>\n        </div>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n    getBuses();\n  }, [getBuses]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Buses</title>\n      </Helmet>\n      <div>\n        <div className=\"flex justify-between p-7\">\n          <PageTitle title=\"Buses\" />\n          <button\n            type=\"submit\"\n            className=\"relative inline-flex items-center justify-start\n                px-10 py-3 overflow-hidden font-bold rounded-full\n                group\"\n            onClick={() => setShowBusForm(true)}\n          >\n            <span className=\"w-32 h-32 rotate-45 translate-x-12 -translate-y-2 absolute left-0 top-0 bg-white opacity-[3%]\"></span>\n            <span className=\"absolute top-0 left-0 w-48 h-48 -mt-1 transition-all duration-500 ease-in-out rotate-45 -translate-x-56 -translate-y-24 bg-blue-600 opacity-100 group-hover:-translate-x-8\"></span>\n            <span className=\"relative w-full text-left text-black transition-colors duration-200 ease-in-out group-hover:text-white\">\n              Add Bus\n            </span>\n            <span className=\"absolute inset-0 border-2 border-blue-600 rounded-full\"></span>\n          </button>\n        </div>\n        <div className=\"p-7\">\n          <Table\n            columns={columns}\n            dataSource={buses}\n            pagination={{ pageSize: 7 }}\n          />\n          {showBusForm && (\n            <BusForm\n              showBusForm={showBusForm}\n              setShowBusForm={setShowBusForm}\n              type={selectedBus ? \"edit\" : \"add\"}\n              selectedBus={selectedBus}\n              setSelectedBus={setSelectedBus}\n              getData={getBuses}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AdminBuses;\n"],"names":["title","className","showBusForm","setShowBusForm","type","getData","selectedBus","setSelectedBus","dispatch","useDispatch","useState","cities","setCities","onFinish","values","ShowLoading","response","axios","headers","Authorization","localStorage","getItem","_id","data","success","message","HideLoading","useEffect","then","width","visible","onCancel","footer","layout","initialValues","gutter","lg","xs","label","name","rules","required","validateTrigger","value","map","index","ville","min","Date","toISOString","split","id","selected","buses","setBuses","getBuses","useCallback","deleteBus","columns","dataIndex","render","status","actions","record","onClick","Helmet","PageTitle","dataSource","pagination","pageSize"],"sourceRoot":""}
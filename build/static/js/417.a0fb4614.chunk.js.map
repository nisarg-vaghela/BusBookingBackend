{"version":3,"file":"static/js/417.a0fb4614.chunk.js","mappings":"yHAUA,IARA,SAAmB,GAAY,IAAVA,EAAK,EAALA,MACnB,OACE,0BACE,eAAIC,UAAU,UAAS,SAAED,KAG/B,C,2DCNaE,E,QAAgBC,EAAAA,OAAa,CACxCC,QAAS,CACPC,cAAc,UAAD,OAAYC,aAAaC,QAAQ,Y,qLCkIlD,UA7HA,WACE,OAAgCC,EAAAA,EAAAA,UAAS,IAAG,eAArCC,EAAQ,KAAEC,EAAW,KACtBC,GAAWC,EAAAA,EAAAA,MAEXC,GAAcC,EAAAA,EAAAA,cAAW,uBAAC,2FAEJ,OAFI,SAE5BH,GAASI,EAAAA,EAAAA,OAAe,SACDb,EAAAA,EAAAA,IAAkB,iBAAD,OACrBI,aAAaC,QAAQ,YACtC,CAAC,GACD,KAAD,EAHKS,EAAQ,OAIdL,GAASM,EAAAA,EAAAA,OACLD,EAASE,KAAKC,SACVC,EAAaJ,EAASE,KAAKA,KAAKG,KAAI,SAACC,GACzC,OAAO,0BACFA,GACAA,EAAQC,KAAG,IACdC,IAAKF,EAAQG,IACbC,KAAMJ,EAAQI,KAAKC,MAEvB,IACAjB,EAAYU,IAEZQ,EAAAA,GAAAA,MAAcZ,EAASE,KAAKU,SAC7B,gDAEDjB,GAASM,EAAAA,EAAAA,OACTW,EAAAA,GAAAA,MAAc,KAAMA,SAAS,yDAE9B,CAACjB,IAEEkB,EAAa,yCAAG,iGAEM,OAFN,SAElBlB,GAASI,EAAAA,EAAAA,OAAe,SACNb,EAAAA,EAAAA,IAAkB,iBAAD,OAChBI,aAAaC,QAAQ,aACtC,KAAD,EAGsC,OALjCuB,EAAG,OAGHC,EAASD,EAAIZ,KAAKA,KAAK,GAAGK,IAAIE,IAC9BO,EAAUF,EAAIZ,KAAKA,KAAK,GAAGQ,KAAKD,IAChCQ,EAAaH,EAAIZ,KAAKA,KAAK,GAAGO,IAAI,EAAD,QAChBvB,EAAAA,EAAAA,OAAqB,iBAAD,OACxB+B,EAAU,YAAID,EAAO,YAAID,GAC1C,CAAC,GACD,KAAD,GAHKf,EAAQ,OAIdL,GAASM,EAAAA,EAAAA,OACLD,EAASE,KAAKC,SAChBS,EAAAA,GAAAA,QAAgBZ,EAASE,KAAKU,SAC9Bf,KAEAe,EAAAA,GAAAA,MAAcZ,EAASE,KAAKU,SAC7B,kDAEDjB,GAASM,EAAAA,EAAAA,OACTW,EAAAA,GAAAA,MAAc,KAAMA,SAAS,0DAEhC,kBAxBkB,mCA0BbM,EAAU,CACd,CACElC,MAAO,WACPmC,UAAW,OACXX,IAAK,OAEP,CACExB,MAAO,YACPmC,UAAW,OACXX,IAAK,QAGP,CACExB,MAAO,aACPmC,UAAW,YACXX,IAAK,OAEP,CACExB,MAAO,eACPmC,UAAW,cACXC,OAAQ,SAACC,GAAW,OAAKC,IAAOD,GAAaE,OAAO,aAAa,GAEnE,CACEvC,MAAO,eACPmC,UAAW,YACXC,OAAQ,SAACI,GAAS,OAAKF,IAAOE,EAAW,SAASD,OAAO,UAAU,GAErE,CACEvC,MAAO,QACPmC,UAAW,QACXC,OAAQ,SAACK,GAAK,OAAKA,EAAMC,KAAK,KAAK,GAErC,CACE1C,MAAO,SACPmC,UAAW,SACXC,OAAQ,SAACO,EAAMC,GAAM,OACnB,gBAAK3C,UAAU,aAAY,UACzB,mBACEA,UAAU,qEACV4C,QAAS,WACPhB,GACF,EAAE,qBAIA,IASZ,OAJAiB,EAAAA,EAAAA,YAAU,WACRjC,GACF,GAAG,CAACA,KAGF,iCACE,SAAC,IAAM,WACL,2CAGF,iBAAKZ,UAAU,MAAK,WAClB,SAAC,IAAS,CAACD,MAAM,cACjB,SAAC,IAAK,CAACkC,QAASA,EAASa,WAAYtC,SAI7C,C","sources":["components/PageTitle.js","helpers/axiosInstance.js","pages/Bookings.jsx"],"sourcesContent":["import React from \"react\";\n\nfunction PageTitle({ title }) {\n  return (\n    <div>\n      <h1 className=\"text-xl\">{title}</h1>\n    </div>\n  );\n}\n\nexport default PageTitle;\n","import axios from \"axios\";\n\nexport const axiosInstance = axios.create({\n  headers: {\n    Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n  },\n});\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { axiosInstance } from \"../helpers/axiosInstance\";\nimport { message, Table } from \"antd\";\nimport { HideLoading, ShowLoading } from \"../redux/alertsSlice\";\nimport PageTitle from \"../components/PageTitle\";\nimport moment from \"moment\";\nimport { Helmet } from \"react-helmet\";\n\nfunction Bookings() {\n  const [bookings, setBookings] = useState([]);\n  const dispatch = useDispatch();\n\n  const getBookings = useCallback(async () => {\n    try {\n      dispatch(ShowLoading());\n      const response = await axiosInstance.get(\n        `/api/bookings/${localStorage.getItem(\"user_id\")}`,\n        {}\n      );\n      dispatch(HideLoading());\n      if (response.data.success) {\n        const mappedData = response.data.data.map((booking) => {\n          return {\n            ...booking,\n            ...booking.bus,\n            key: booking._id,\n            user: booking.user.name,\n          };\n        });\n        setBookings(mappedData);\n      } else {\n        message.error(response.data.message);\n      }\n    } catch (error) {\n      dispatch(HideLoading());\n      message.error(error.message);\n    }\n  }, [dispatch]);\n\n  const CancelBooking = async () => {\n    try {\n      dispatch(ShowLoading());\n      const res = await axiosInstance.get(\n        `/api/bookings/${localStorage.getItem(\"user_id\")}`\n      );\n      const bus_id = res.data.data[0].bus._id;\n      const user_id = res.data.data[0].user._id;\n      const booking_id = res.data.data[0]._id;\n      const response = await axiosInstance.delete(\n        `/api/bookings/${booking_id}/${user_id}/${bus_id}`,\n        {}\n      );\n      dispatch(HideLoading());\n      if (response.data.success) {\n        message.success(response.data.message);\n        getBookings();\n      } else {\n        message.error(response.data.message);\n      }\n    } catch (error) {\n      dispatch(HideLoading());\n      message.error(error.message);\n    }\n  };\n\n  const columns = [\n    {\n      title: \"Bus Name\",\n      dataIndex: \"name\",\n      key: \"bus\",\n    },\n    {\n      title: \"Full Name\",\n      dataIndex: \"user\",\n      key: \"user\",\n    },\n\n    {\n      title: \"Bus Number\",\n      dataIndex: \"busNumber\",\n      key: \"bus\",\n    },\n    {\n      title: \"Journey Date\",\n      dataIndex: \"journeyDate\",\n      render: (journeyDate) => moment(journeyDate).format(\"DD/MM/YYYY\"),\n    },\n    {\n      title: \"Journey Time\",\n      dataIndex: \"departure\",\n      render: (departure) => moment(departure, \"HH:mm\").format(\"hh:mm A\"),\n    },\n    {\n      title: \"Seats\",\n      dataIndex: \"seats\",\n      render: (seats) => seats.join(\", \"),\n    },\n    {\n      title: \"Action\",\n      dataIndex: \"action\",\n      render: (text, record) => (\n        <div className=\"flex gap-2\">\n          <button\n            className=\"underline text-base text-red-500 cursor-pointer hover:text-red-700\"\n            onClick={() => {\n              CancelBooking();\n            }}\n          >\n            Cancel\n          </button>\n        </div>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n    getBookings();\n  }, [getBookings]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Bookings</title>\n      </Helmet>\n\n      <div className=\"p-5\">\n        <PageTitle title=\"Bookings\" />\n        <Table columns={columns} dataSource={bookings} />\n      </div>\n    </>\n  );\n}\n\nexport default Bookings;\n"],"names":["title","className","axiosInstance","axios","headers","Authorization","localStorage","getItem","useState","bookings","setBookings","dispatch","useDispatch","getBookings","useCallback","ShowLoading","response","HideLoading","data","success","mappedData","map","booking","bus","key","_id","user","name","message","CancelBooking","res","bus_id","user_id","booking_id","columns","dataIndex","render","journeyDate","moment","format","departure","seats","join","text","record","onClick","useEffect","dataSource"],"sourceRoot":""}